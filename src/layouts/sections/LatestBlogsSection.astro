---
import { parseLocale, useTranslations } from "../../utils/i18n";
import { getCollection } from "astro:content";
import PostCard from "../../components/PostCard.astro";
import CardList from "../../components/CardList.astro";
import { i18nPropsAndParams } from "astro-loader-i18n";
import { defaultPropsAndParamsOptions } from "../../utils/paths";
import slug from "limax";

type Props = {
  locale: string;
};

const locale = parseLocale(Astro.props.locale);
const t = useTranslations(locale);
const collection = await getCollection("blog");
const posts = i18nPropsAndParams(collection, {
  ...defaultPropsAndParamsOptions,
  routePattern: `[...locale]/[blog]/[...slug]`,
  generateSegments: (entry) => {
    return { slug: slug(entry.data.title) };
  }
});
const filteredPosts = posts.reverse().slice(0, 3);
---

<style>
  section :global(ul) {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr;
    gap: 1rem;
  }
</style>

<section>
  <h2>{t("sections.latestPosts")}</h2>
  <CardList>
    {
      filteredPosts.map(({ props: post }) => (
        <li>
          <PostCard
            title={post.data.title}
            cover={post.data.cover}
            publishedAt={post.data.publishedAt}
            locale={post.data.locale}
            translatedPath={post.translatedPath}
          />
        </li>
      ))
    }
  </CardList>
</section>
