---
import type { InferGetStaticPropsType } from "astro";
import DefaultLayout from "../../../layouts/DefaultLayout.astro";
import { useTranslations } from "../../../utils/i18n";
import { blogPagePaths } from '../../_paths';
import SinglePaneContent from '../../../layouts/sections/SinglePaneContent.astro';
import PostCard from '../../../components/PostCard.astro';
import CardList from '../../../components/CardList.astro';
import Pagination from '../../../components/Pagination.astro';

export const getStaticPaths = blogPagePaths;

type Props = InferGetStaticPropsType<typeof getStaticPaths>;
const { page, locale, translations } = Astro.props as Props;
const pagedTranslations = Object.entries(translations).reduce<Record<string, string>>((acc, [l, t]) => {
  acc[l] = page.currentPage === 1 ? t : `${t}/${page.currentPage}`;
  return acc;
}, {});
const t = useTranslations(locale);
---

<style>
  :global(.vertical) {
    display: flex;
    flex-direction: column;
    gap: 1.4rem;
    margin: 1.4rem 0 !important;
  }
</style>

<DefaultLayout translations={pagedTranslations}>
  <SinglePaneContent>
    <h1>{t('pages.blog')}</h1>
    <Pagination page={page} />
    <CardList classNames='vertical'>
      {page.data.map(async (post) => (
        <li>
          <PostCard post={post} locale={locale} />
        </li>
      ))}
    </CardList>
    <Pagination page={page} />
  </SinglePaneContent>
</DefaultLayout>
