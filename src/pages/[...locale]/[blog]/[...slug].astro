---
import type { InferGetStaticParamsType, InferGetStaticPropsType } from 'astro';
import DefaultLayout from '../../../layouts/DefaultLayout.astro';
import { entryPaths } from '../../_paths';
import ThreePaneContent from '../../../layouts/sections/ThreePaneContent.astro';
import TableOfContents from '../../../components/TableOfContents.astro';
import GitInfo from '../../../components/GitInfo.astro';
import type { GitInfoFrontmatter } from '../../../remark/remark-git-info';
import { getLocaleFromUrl, useTranslations } from '../../../utils/i18n';
import { resolvePath } from '../../../utils/path';
import slug from 'limax';
import { render } from 'astro:content';

export const getStaticPaths = entryPaths('blog', 'slug');

type Props = InferGetStaticPropsType<typeof getStaticPaths>;
const { translations, data } = Astro.props as Props;

const { Content, headings, remarkPluginFrontmatter } = await render(Astro.props);
const git: GitInfoFrontmatter['git'] = remarkPluginFrontmatter.git;
const locale = getLocaleFromUrl(Astro.url);
const t = useTranslations(locale);
type Params = InferGetStaticParamsType<typeof getStaticPaths>;
const { locale: localeSlug } = Astro.params as Params;
const blogSlug = 'blog' in Astro.params ? Astro.params.blog as string : '';

---

<DefaultLayout translations={translations}>
  <ThreePaneContent>
    <Fragment slot="left"><TableOfContents headings={headings} /></Fragment>
    <Content/>
    <Fragment slot="right">
      <GitInfo git={git}>
        <Fragment slot="after">
          <dt>{t('label.tags')}</dt>
          <dd>
            {data.tags.map((tag) => (
              <a href={resolvePath(localeSlug, blogSlug, slug(tag))}>{tag}</a>
            ))}
          </dd>
        </Fragment>
      </GitInfo>
    </Fragment>
  </ThreePaneContent>
</DefaultLayout>
