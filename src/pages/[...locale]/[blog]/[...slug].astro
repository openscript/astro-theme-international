---
import DefaultLayout from "../../../layouts/DefaultLayout.astro";
import ThreePaneContent from "../../../layouts/sections/ThreePaneContent.astro";
import TableOfContents from "../../../components/TableOfContents.astro";
import GitInfo from "../../../components/GitInfo.astro";
import type { GitInfoFrontmatter } from "../../../remark/remark-git-info";
import { parseLocale, useTranslations } from "../../../utils/i18n";
import { i18nPropsAndParams } from "astro-loader-i18n";
import slug from "limax";
import { getCollection, render } from "astro:content";
import { defaultPropsAndParamsOptions } from "../../../utils/paths";
import { resolvePath } from "../../../utils/path";

export const getStaticPaths = async () => {
  const routePattern = "[...locale]/[blog]/[...slug]";
  const collection = await getCollection("blog");

  return i18nPropsAndParams(collection, {
    ...defaultPropsAndParamsOptions,
    routePattern,
  });
};

const {
  translations,
  data: { tags, locale },
} = Astro.props;

const { Content, headings, remarkPluginFrontmatter } = await render(
  Astro.props,
);

const { locale: paramsLocale, blog: paramsBlog } = Astro.params as {
  locale: string;
  blog: string;
};
const git: GitInfoFrontmatter["git"] = remarkPluginFrontmatter.git;
const t = useTranslations(parseLocale(locale));
---

<DefaultLayout translations={translations}>
  <ThreePaneContent>
    <Fragment slot="left"><TableOfContents headings={headings} /></Fragment>
    <Content />
    <Fragment slot="right">
      <GitInfo git={git}>
        <Fragment slot="after">
          <dt>{t("label.tags")}</dt>
          <dd>
            {
              tags.map((tag) => (
                <a href={resolvePath(paramsLocale, paramsBlog, slug(tag))}>{tag}</a>
              ))
            }
          </dd>
        </Fragment>
      </GitInfo>
    </Fragment>
  </ThreePaneContent>
</DefaultLayout>
