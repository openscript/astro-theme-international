---
import type { InferGetStaticPropsType } from "astro";
import DefaultLayout from "../../../../layouts/DefaultLayout.astro";
import { getRelativePath } from "../../../../utils/path";
import { getContentEntryPath } from "../../../../utils/i18n";
import Image from "astro/components/Image.astro";
import defaultCover from "../../../../assets/default-cover.jpg";
import { blogTagPagePaths } from '../../../_paths';

export const getStaticPaths = blogTagPagePaths;

type Props = InferGetStaticPropsType<typeof getStaticPaths>;
const { page, locale, translations, tag } = Astro.props as Props;

---

<style>
  img {
    width: 600px;
    height: 320px;
    object-fit: cover;
  }
</style>

<DefaultLayout translations={translations} currentLocale={locale}>
  <h1>Tag {tag}</h1>
  <ul>
    {
      page.data.map(async (post) => (
        <li>
          <a href={await getContentEntryPath("blog", post.slug)}>
            <Image src={post.data.cover?.src || defaultCover} alt={post.data.cover?.alt || post.data.title} widths={[720]} />
            {post.data.title}
            {`${new Date(post.data.publishedAt).toLocaleDateString(locale)} ${new Date(post.data.publishedAt).toLocaleTimeString(locale)}`}
          </a>
        </li>
      ))
    }
  </ul>
  {
    page.url.prev ? (
      <a href={getRelativePath(page.url.prev)}>Vorherige Seite</a>
    ) : null
  }
  {
    page.url.next ? (
      <a href={getRelativePath(page.url.next)}>NÃ¤chste Seite</a>
    ) : null
  }
</DefaultLayout>
