---
import type { InferGetStaticPropsType } from "astro";
import DefaultLayout from "../../../../layouts/DefaultLayout.astro";
import { getRelativePath } from "../../../../utils/path";
import { blogTagPagePaths } from '../../../_paths';
import SinglePaneContent from '../../../../layouts/sections/SinglePaneContent.astro';
import PostCard from '../../../../components/PostCard.astro';
import CardList from '../../../../components/CardList.astro';
import { useTranslations } from '../../../../utils/i18n';

export const getStaticPaths = blogTagPagePaths;

type Props = InferGetStaticPropsType<typeof getStaticPaths>;
const { page, locale, translations, tag } = Astro.props as Props;
const t = useTranslations(locale);

---

<DefaultLayout translations={translations}>
  <SinglePaneContent>
    <h1>{t('pages.blog.tag', { tag })}</h1>
    <CardList>
      {
        page.data.map(async (post) => (
          <li>
            <PostCard post={post} locale={locale} />
          </li>
        ))
      }
    </CardList>
    {
      page.url.prev ? (
        <a href={getRelativePath(page.url.prev)}>Vorherige Seite</a>
      ) : null
    }
    {
      page.url.next ? (
        <a href={getRelativePath(page.url.next)}>NÃ¤chste Seite</a>
      ) : null
    }
  </SinglePaneContent>
</DefaultLayout>
