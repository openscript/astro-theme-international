---
import DefaultLayout from "../../../../layouts/DefaultLayout.astro";
import { Image } from "astro:assets";
import { parseLocale, useTranslations } from "../../../../utils/i18n";
import FullContent from "../../../../layouts/sections/FullContent.astro";
import { getCollection } from "astro:content";
import { i18nPropsAndParams } from "astro-loader-i18n";
import { defaultPropsAndParamsOptions } from "../../../../utils/paths";
import sluggify from "limax";

export const getStaticPaths = async () => {
  const routePattern = "[...locale]/[gallery]/[category]";
  const collection = await getCollection("gallery");

  const propsAndParams = i18nPropsAndParams(collection, {
    ...defaultPropsAndParamsOptions,
    routePattern,
    generateSegments: (entry) => {
      const title = typeof entry.data.title === "string" ? entry.data.title : "";
      return { category: sluggify(title) };
    }
  });

  return propsAndParams.flatMap((item) => {
    return item.props.data.images.map((image, index) => {
      return {
        ...item,
        props: {
          ...item.props,
          image: {
            src: image.src,
            title: image.title,
          },
          next: item.props.data.images[index + 1]
            ? (index + 1).toString()
            : undefined,
          prev: item.props.data.images[index - 1]
            ? (index - 1).toString()
            : undefined,
          translations: Object.entries(item.props.translations).reduce(
            (acc, [key, value]) => {
              acc[key] = `${value}/${index}`;
              return acc;
            },
            {} as Record<string, string>,
          ),
        },
        params: {
          ...item.params,
          item: index.toString(),
        },
      };
    });
  });
};

const {
  image,
  translations,
  next,
  prev,
  data: { locale },
} = Astro.props;
const t = useTranslations(parseLocale(locale));
---

<style>
  div {
    display: flex;
    gap: 1rem;
    justify-content: center;
    margin: 1rem 0;
  }
</style>

<DefaultLayout translations={translations}>
  <FullContent>
    <h1>Bild</h1>
    <Image src={image.src} alt={`Photo: ${image.title}`} width={1920} />
    <div>
      {
        prev && (
          <a href={new URL(`../${prev}`, `${Astro.url}/`).pathname}>
            {t("pagination.previous")}
          </a>
        )
      }
      {
        next && (
          <a href={new URL(`../${next}`, `${Astro.url}/`).pathname}>
            {t("pagination.next")}
          </a>
        )
      }
    </div>
  </FullContent>
</DefaultLayout>
