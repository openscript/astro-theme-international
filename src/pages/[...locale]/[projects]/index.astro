---
import DefaultLayout from '../../../layouts/DefaultLayout.astro';
import { getContentEntryPath, parseLocale, useTranslations } from '../../../utils/i18n';
import { getEntry, getCollection } from 'astro:content';
import SinglePaneContent from '../../../layouts/sections/SinglePaneContent.astro';
import { createI18nCollection, i18nPropsAndParams } from 'astro-loader-i18n';
import { C, localeSlugs } from '../../../configuration';

export const getStaticPaths = async () => {
  const routePattern = "[...locale]/[projects]";
  const collection = createI18nCollection({ locales: localeSlugs, routePattern });

  return i18nPropsAndParams(collection, {
    defaultLocale: C.DEFAULT_LOCALE,
    routePattern,
    segmentTranslations: C.SEGMENT_TRANSLATIONS,
  });
};

const { translations, data: { locale } } = Astro.props;
const projects = await getCollection('projects');
const t = useTranslations(parseLocale(locale));

---

<DefaultLayout translations={translations}>
  <SinglePaneContent>
    <h1>{t('pages.projects')}</h1>
    <ul>
      {
        projects.map(async (project) => {
          const p = project.data;
          if (!p) return undefined;
          return <li>
            <a href={getContentEntryPath(await getEntry('projects', project.id))}>
              {p.title}
            </a>
          </li>
        }).filter(Boolean)
      }
    </ul>
  </SinglePaneContent>
</DefaultLayout>
